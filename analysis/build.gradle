/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'distribution'

    // kotlin plugin
    id "org.jetbrains.kotlin.jvm" version "1.2.31"
}

// Define the main class for the application
mainClassName = 'TheOfficeKt'

// multiple main's
ext.multiMain = false

// dependency versions
ext {
    kotlin_argparser_version = '2.0.6'
    querydsl_version = '4.2.1'
    log4j12_version = '1.7.25'
    jooq_version = '3.10.6'
    jfree_version='1.0.13'
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // https://github.com/xenomachina/kotlin-argparser
    compile group: 'com.xenomachina', name: 'kotlin-argparser', version: kotlin_argparser_version

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-sql
    compile group: 'com.querydsl', name: 'querydsl-sql', version: querydsl_version
    
    // https://mvnrepository.com/artifact/com.querydsl/querydsl-sql-codegen
    compile group: 'com.querydsl', name: 'querydsl-sql-codegen', version: querydsl_version

    // used with querydsl
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: log4j12_version

    // https://mvnrepository.com/artifact/org.jooq/jooq
    // compile group: 'org.jooq', name: 'jooq', version: jooq_version

    // https://mvnrepository.com/artifact/jfree/jfreechart
    compile group: 'jfree', name: 'jfreechart', version: jfree_version

}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

if (ext.multiMain) {
    //=======================================
    // Create scripts for entry points
    // Subproject must apply application plugin to be able to call this method.
         
    task createAllStartScripts() {
        //doLast {
            // placeholder
        //}
    }
    
    def scripts = [ 
        "TheOfficeKt" : "TheOfficeKt",
    ]
    scripts.each() { scriptName, className ->
            def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
            mainClassName = className
            applicationName = scriptName
            outputDir = new File(project.buildDir, 'scripts')
            classpath = jar.outputs.files + project.configurations.runtime
        }
          applicationDistribution.into("bin") {
                from(t)
                fileMode = 0755
        }
        createAllStartScripts.dependsOn(t)
    }
}
